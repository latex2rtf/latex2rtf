\def\LaTeX{L\kern-.36em\raise.3ex\hbox{\sc a}\kern-.15em\TeX}
\def\LaTeXe{\LaTeX\kern.15em 2$_\varepsilon$}
\input texinfo	
@c -*-texinfo-*-
@c %**start of header
@setfilename latex2rtf.info
@settitle LaTeX2rtf
@setchapternewpage odd
@c %**end of header

@macro latex {}
@ifnottex
LaTeX
@end ifnottex
@iftex
@LaTeX{}
@end iftex
@end macro

@macro latexe {}
@iftex
@LaTeXe{}
@end iftex
@ifnottex
LaTeX2e
@end ifnottex
@end macro

@macro ltor {}
@iftex
@LaTeX{}2RTF
@end iftex
@ifnottex
LaTeX2RTF
@end ifnottex
@end macro

@ifinfo
This file documents @ltor{}, a converter from the @latex{} markup language
for document typesetting into rtf, which does the same thing, but in
another way and mood.

Copyright 1998-2001 Georg Lehner minor updates by Wilfried Hennings and
Scott Prahl

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

@ignore Permission is granted to process this file through TeX and print
the results, provided the printed document carries a copying permission
notice identical to this one except for the removal of this paragraph
(this paragraph not being relevant to the printed manual).

@end ignore Permission is granted to copy and distribute modified
versions of this manual under the conditions for verbatim copying,
provided also that the sections entitled ``Copying'' and ``GNU General
Public License'' are included exactly as in the original, and provided
that the entire resulting derived work is distributed under the terms of
a permission notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation
approved by the Free Software Foundation.

@end ifinfo

@titlepage 
@title @ltor{}
@subtitle 
A converter from @latex{} to RTF

Edition 0.3
@author Georg Lehner,
updated by Wilfried Hennings and Scott Prahl

@page
@vskip 0pt plus 1filll
Copyright @copyright{} 1998-2001 Georg Lehner, Wilfried Hennings, Scott Prahl

Permission is granted to make and distribute verbatim copies of this
manual provided the copyright notice and this permission notice are
preserved on all copies.

Permission is granted to copy and distribute modified versions of this
manual under the conditions for verbatim copying, provided also that the
sections entitled ``Copying'' and ``GNU General Public License'' are
included exactly as in the original, and provided that the entire
resulting derived work is distributed under the terms of a permission
notice identical to this one.

Permission is granted to copy and distribute translations of this manual
into another language, under the above conditions for modified versions,
except that this permission notice may be stated in a translation
approved by the Free Software Foundation.
@end titlepage

@ifnottex
@node Top, History, (dir), (dir)
@top @ltor{}

This file documents @ltor{}, a converter from the @latex{} markup
language for document typesetting into rtf, which does the same thing,
but in another way and mood.

@c This document applies to version 1.9j of latex2rf

@end ifnottex

@menu
* History::                     
* Introduction::                
* Availability::                
* Installing LaTeX2RTF::          
* Using LaTeX2RTF::          
* Features::                    
* Configuring LaTeX2RTF ::      
* Error Messages and Logging of LaTeX2RTF Activity ::  
* LaTeX2RTF under Development ::  
* Index of Commandline and Configuration file Options ::  
@end menu

@node  History, Introduction, Top, Top
@chapter History & Copyright
@cindex History of the programm
@cindex Copyright issues

In 1994 the first Version of @ltor{} was written by Fernando Dorner and Andreas Granzer of
the Viena University supervised by Ralf Schlatterbeck in a one-semester course. They created a simple
@latex{} parser and added most of the infrastructure for the program. This
was version 1.0 of @ltor{}.  In 1995, work on @ltor{} was
continued in another 
one-semester course by Friedrich Polzer and Gerhard Trisko. The result was @ltor{} version
1.5.  @email{ralf@@zoo.priv.at,Ralf Schlatterbeck} maintained and extended @ltor{} until 1998.

In 1998 @email{jorge_lehner@@gmx.net,Georg Lehner} found the reference to @ltor{} on
the @uref{http://tug.org/utilities/texconv/index.html, TeX Conversion Webpage}  of
@email{W.Hennings@@fz-juelich.de,Wilfried Hennings} and added some functionality and took
over the maintainence of the program.  The last version release by Georg is 1.8aa.
Wilfried Hennings now coordinates
the development of the program and maintains the project on 
@uref{http://sourceforge.net/projects/latex2rtf/,SourceForge} where there are also
(low volume) mailing lists for users
@email{latex2rtf-users@@lists.sourceforge.net}
and developers
@email{latex2rtf-developers@@lists.sourceforge.net}.
For subscription to these lists:
@email{mail_to_latex2rtf-users-request@@lists.sourceforge.net?subject=subscribe}
or
@email{mail_to_latex2rtf-developers-request@@lists.sourceforge.net?subject=subscribe}

As of October 2001, version 1.9k of @ltor{} is available. 
Afterwards there shall be a jump to Version 2.0 with a complete redesign, but
this is not history but future ...

The contents of this manual is composed by copying shamelessly what was
available in the original sources and documentation.


@node Introduction, Availability, History, Top
@chapter  Introduction

@ltor{} is a translator program from @latex{} text into ``rich text format''
files.  These files are commonly referred to  as RTF files and are published
standard format by Microsoft.  This standard is somewhat ambiguous in places
and Microsoft ignores various parts of the standard that are inconvenient, but
RTF widely used by many WYSIWIG text editors and is supported by
Microsoft Word and Word for Windows. RTF can be exported and/or
imported by several textprocessors.

@ltor{} translates the text and much of the formatting information from @latex{}
to RTF, but the typeset output is not nearly as good as what you would get from
using @latex{} directly.  So, why bother translating? There are three purposes:

@enumerate
@item
You use @latex{} and hate everything beginning with MS-@enddots{} But
you have to share your documents to people which don't even now that
there exist other things than MS-@enddots{}
      
@item
You know somebody who frequently sends you very fine @latex{} documents.
Unfortunately, you are ``on the other side'' and need to import her
files, steal some part and then desktop publish it in your fine
MS-@dots{} environment.
      
@item
You maybe have both things, @latex{} and MS-@dots{}, or you don't. But
you like the way how @latex{} and friends work, and you don't want to
type in a letter to your friends with about 345 characters and end up
with a @file{.doc} file of 32,845 byte. So you edit your documents
either with @file{edit.com} or @file{edlin} in the structured form that
@latex{} encourages, and then you use MS-@dots{}, or MS-@dots{}-Viewer
or any other RTF-rendering software to print out your file.  Yes, this
somewhat bizarre, but we are all somewhat bizarre, are we not? 
@end enumerate

There are drawbacks to the conversion process. In fact, don't expect any
@latex{} file to be converted like you want, don't expect it to be
converted without errors or warnings, and don't be especially surprised
if it doesn't convert at all.  @ltor{} is known to have many bugs and
many missing features. The number seems to grow more and more each day. 
Nevertheless, we can categorically state that there are some special
cases,  in which a @latex{} file will be translated to RTF
satisfactorily by @ltor{} --- This was sort of disclaimer, ok? Ok!

@latex{} is a system for typesetting text and therefore it focuses on
the logical structure of a document, whilst RTF is meant to be a
transport format for a family of Desktop Publishing Software, dealing
mostly with the design of a text.

Although the possible different commands and styles in @latex{} are much
more flexible and standardized than in RTF, only a small subset of
commands has been implemented to date.  @xref{Unimplemented Features}.

Some of the capabilities of @ltor{} are restricted in scope or buggy. 
@xref{Known Bugs}.

RTF is a moving target, because Microsoft does not stop inventing new
extensions and features for it. So you cannot view newer RTF files with
older word Processors.  @ltor{} eventually will generate RTF output that
is unreadable with your Program.  The syntax and semantics of RTF are
somewhat artistic, i.e., you can generate a syntactically correct RTF
file that cannot be displayed by some/most word processors.

For more details on RTF look at the RTF-Tools by Paul DuBois, and the
corresponding newsgroups, etc. @uref{http://www.primate.wisc.edu/}

@node Availability, Installing LaTeX2RTF, Introduction, Top
@chapter Availability

@ltor{} is available for many Unix Platforms, for the Macintosh, and for MS-DOS, 
including all versions of MS Windows 95.

The MS-DOS version (1.8aa and up) will also run under all MS Windows versions.
It requires an i386 processor or better.
The Win32 Version requires @uref{http://sources.redhat.com/cygwin/,Cygnus-Cygwin32}. 
As the MS-DOS version (1.8aa and up) will also run under all MS
windows versions, the Win32 version has been discontinued.

Subsequent to 1.8aa, @email{prahl@@ece.ogi.edu,Scott Prahl} has fixed
many bugs, improved handling of tabular environments, 
added code to significantly improve handling of equations,
added macro expansion of @code{\newcommand} definitions, 
improved handling of citations, and added some support for
@code{\includegraphics} files.

You find the latest version on @uref{http://sourceforge.net/projects/latex2rtf/,SourceForge}
and -- with some delay -- on CTAN sites: e.g., @uref{http://www.dante.de} or
@uref{http://www.ctan.org}.

There are a couple of persons working on the @ltor{} revival, coordinated by
@email{W.Hennings@@fz-juelich.de, Wilfried Hennings}.
Contact the mailing_list for the latest news.

@node Installing LaTeX2RTF, Using LaTeX2RTF, Availability ,top
@chapter Installing LaTeX2RTF

@menu
* General ::
* @acronym{UNIX} ::
* Windows ::
* Macintosh ::
* Problems Compiling ::
* Problems with make test ::
@end menu

@node General,@acronym{UNIX},Installing LaTeX2RTF,Installing LaTeX2RTF
@section General


@node @acronym{UNIX},Windows,General,Installing LaTeX2RTF
@section @acronym{UNIX}

The documentation of the program is found in the @file{doc/} directory in the
file @file{latex2rtf.info} in the GNU info format.  For your convenience, you
can find @file{.html} and @file{.pdf} versions of the manual there as well.

To install (on a @acronym{UNIX} system)
@enumerate
@item
Edit  @file{Makefile} for your local configuration. The install part supports
multiple directories to install to, you will normally only need one. Be
sure to correctly configure the @file{LIBDIR} variable to the directory where
support files (ending in @file{.cfg}) will be found by the program. This is
normally the same as the @file{LIBINSTALL} variable.

@item @code{make}

@item If this is not your first time installation, you may want to preserve
  your old configuration (@file{*.cfg}) files. Copy them to a safe place before
  installing.

@item @code{make install}

@item If you have problems with make install (for example if your @code{mkdir}
  doesn't support the @option{-p} option) and you do not need multiple install
  targets, try:
  @code{make simple_install}
  
@item Define the environment variable @env{RTFPATH}. This is typically 
@code{/usr/local/lib/latex2rtf}

@item Run @code{make test} to test your installation
@end enumerate

Open the @file{latex2rtf} directory and type
@example
make
make test
sudo make install
@end example

@node Windows, Macintosh, @acronym{UNIX},Installing LaTeX2RTF
@section Windows

The file @file{L2R.BAT} is for use with the @acronym{DJGPP} generated version 
@file{LATEX2RT.EXE}.

The @acronym{UNIX} and Mac distributions do not contain an executable for DOS / Windows.
Instead, get the DOS / Windows port as file @file{latex2rtf-x.xx_dos.zip}
(where x.xx is the version number) from  @uref{http://sourceforge.net/projects/latex2rtf/}

@node Macintosh,Problems Compiling,Windows,Installing LaTeX2RTF
@section Macintosh

If you want a MacOS X version, make sure that you have installed
the developer tools CD that is appropriate for your OS version, and
then follow the directions above for @acronym{UNIX} installation.

There is a classic MacOS PPC port of the 1.9k of @ltor{} and I have
made a binary distribution of this application.  Unfortunately, because
I (Scott Prahl) do all development under MacOS X, the binaries for
the Classic version often lags (far) behind the current @acronym{UNIX}
version.

To convert a @latex{} file, just drag the file onto the @ltor{} application
icon.  The translation is best if there are @file{.aux} and @file{.bbl} 
files in the same folder as the @file{.tex} file to be converted.  These
should be generated using @latex{} and @file{bibtex}.  

@node Problems Compiling, Problems with make test,Macintosh,Installing LaTeX2RTF
@section Problems Compiling

The code for @ltor{} is standard @acronym{ANSI} C.  Some possible pitfalls
are
@itemize @bullet
@item Not correctly defining your compiler in the Makefile.
The default is to use @code{gcc}.  

@item Encountering errors because the compiler options.  During development
all compiler warnings are turned on.  However, different compilers have
different interpretations of @option{-Wall} and @option{-pedantic} and 
so may generate errors that were not found in a different development
system.  Plese report these, but a quick fix is to remove all compiler
options.

@item Not defining @env{RTFPATH}.

@item Not defining @env{HAS_NO_STRDUP} in the Makefile when your system
lacks this facility.
@end itemize

@node Problems with make test,,Problems Compiling,Installing LaTeX2RTF
@section Problems with @code{make test}

All the files in the @file{test} directory are converted (with more or less
success) using @ltor{} and are tested before each CVS check-in and with
all released tarballs.  If you have successfully compiled @ltor{} then
problems are probably caused by

@itemize @bullet

@item Not defining @env{RTFPATH}.

@item Not defining @env{HAS_NO_STRDUP} in the Makefile when your system
lacks this facility.
@end itemize

@node Using LaTeX2RTF, Features, Installing LaTeX2RTF ,top
@chapter Using LaTeX2RTF

@menu
* General assumptions made by LaTeX2RTF ::
* LaTeX2RTF Options ::
* Debugging::                   
@end menu

@node General assumptions made by LaTeX2RTF, LaTeX2RTF Options, Using LaTeX2RTF, Using LaTeX2RTF
@section General assumptions made by LaTeX2RTF

@ltor{} assumes that the @file{.tex} file you want to convert is a valid
@latex{} document.  The chances of a successful @ltor{} conversion are 
slightly better than the proverbial snowball's if the @file{.tex} file
doesn't @code{latex} properly.  Use
@latex{} to find and correct errors before using @ltor{}. 

User defined @latex{} commands are ignored. If you are familiar with the RTF
format and the commands can be translated by simply inserting a format string
into the RTF file you can add these commands to the @file{direct.cfg} configuration
file.  @xref{Direct Conversion Configuration}.

To correctly convert font names you must edit the @file{fonts.cfg} configuration file.

You have to specify the font names you use and how the @latex{} default font names
should be converted to RTF.  @xref{Font Configuration}.
@latex{} variables and user defined commands are not evaluated. They will be
simply ignored. To let @ltor{} know the names of variables you can add them
in the @file{ignore.cfg} file.  @xref{Ignore Command Configuration}.

The environment variable RTFPATH may contain a search path for the support
files (all files ending in @file{.cfg}). If no file is found during the search in the
search-path or if the environment variable is not set, the compiled-in default
for the configuration-file directory is used. If the files are not found at all
the program aborts.

In the MS-DOS version the search path is separated by `;' in the Unix version
by `:'. For the paths themselves apply `\' and `/'. A separator may appear at
the beginning or ending of RTFPATH.

Make sure that the configuration files are in the correct directory. @ltor{}
will need at least @file{fonts.cfg}, @file{direct.cfg}, @file{ignore.cfg}, @file{english.cfg}.
You may have to change one ore more of them to suit your needs.
@xref{Configuring LaTeX2RTF}.

@xref{Missing and faulty command line options}, for actual implementations
irregularities.

See See section Reporting_Bugs on how to reach the maintainer.

@node LaTeX2RTF Options,Debugging,General assumptions made by LaTeX2RTF,Using LaTeX2RTF
@section LaTeX2RTF Options

The @ltor{} command converts a @latex{} file into RTF text format. The text and
much of the formatting information is translated to RTF making the new file
look similar to the original.  The command line syntax is:

@example
latex2rtf [-options] inputfile.[tex]
@end example

If inputfile is not specified, standard input is read.
The @code{-options} may consist of one or more of the following

@table @code
@item -a auxfile
specify an @file{.aux} file (for table and figure references) that
differs from @file{inputfile.aux}. If this is omitted, the name of the
inputfile with the suffix replaced @file{.aux'}will be taken.  You must
provide both files (@file{.tex} and the @file{.aux}) to be able to
convert cross-references in a @latex{} file.  The @file{.aux} is created
by running the @file{inputfile.tex} through @code{latex}.

@item -b bblfile
Unless an @file{bblfile} is specified with the @code{-b} option, @ltor{} uses a
@file{inputfile.bbl}.  The @file{bblfile} file is used for citations and is typically
created by running @file{inputfile.aux} through @file{bibtex}.

@item -d
The @option{-d} option determines the amount of debugging information to send to
stderr while translating. `0' means only Errors, `1' Warning Messages
(default) also.  These numbers can go as high as `7'.

@item -l language
used to set the language used by the @latex{} document.  Typically, this
is specified in a @latexe{} document by including
@code{\usepackage[language]@{babel@}} where @code{language} is one of
the languages supported by the @code{babel} package.   All languages
listed in the babel system are supported so far as translations for
``Chapter,'' ``References,'' and the like.  Specific support for
specific options of the german style package are explictly supported. 
The french translated names are found in the @file{french.cfg} file in
the @file{cfg/} directory.  @xref{Language Configuration}.

@item -o outputfile
Unless an @file{outputfile} is specified with the @code{-o} option, the resulting RTF 
filename is
formed by removing @file{.tex} from the @file{inputfile} and appending @file{.rtf}.

@item -C codepage
used to specify the character set (code page) used in the @latex{} document. 
This is only important when non-ansi characters are included in the @latex{}
document.
Typically this is done in a @latexe{} file by using
@code{\usepackage[codepage]@{inputenc@}}
This command is not needed if the above command is already in the @latexe{}
file.  You may select any of the following code pages:
ansinew, applemac, cp437, cp437de, cp850, cp852, cp865, decmulti, cp1250, 
cp1252, latin1, latin2, latin3, latin4, latin5, latin9, and next.  Support
for the Eastern European codepages is pretty weak at the moment.  The default
behavior is to use ansinew (code page 1252).

@item -V 
prints version information on standard output and exits.

@end table


@node Debugging, ,LaTeX2RTF Options, Using LaTeX2RTF
@section Debugging


With the @option{-d} option you can specify how much of its internal working @ltor{}
is reporting.

If there is a logfile specified the output goes to this file. Nonetheless
Warnings and Errors are logged to stderr always.
(Actually) possible values of @option{-d} are

@enumerate 0
@item
only errors (=@option{-q}).
@item
Translation Warnings (default).
@item
does not really do anything at the moment
@item
Reasonably high level debugging messages
@item
Show all function calls
@item
Show all each character as it is processed
@item
Show processing of characters as they are output as well
@end enumerate

@node Features, Configuring LaTeX2RTF, Using LaTeX2RTF, Top
@chapter Features

In this chapter you find what styles is @ltor{} supposed to translate
correctly to RTF.

@menu
* LaTeX2e::                     
* Input Encoding ::          
* Language Support ::          
* Cross References ::            
* Equations ::  
* Tables ::
* Graphics ::          
* Pagestyles ::                  
* Hyperlatex ::  
@end menu

@node LaTeX2e, Input Encoding, Features, Features
@section LaTeX2e

@ltor{} understands most of the commands introduced with @latexe{}.  It supports both
the old 2.09 version of @code{\documentstyle[options]@{format#@}} and the newer
@code{\documentclass[options]@{format@}}.  

@node Input Encoding, Language Support, LaTeX2e, Features
@section Input Encoding

It is not necesary to specify the @option{-C} option if you use @code{\usepackage@{isolatin1@}}
or @code{\documentstyle[isolatin1]@{...@}}. @ltor{} automagically detects these
packages/style options and switches to processing of ISO-Latin1 codes.

@node Language Support, Cross References , Input Encoding, Features
@section Language Support

The following languages from the Babel package are supported: afrikaans,
german, nynorsk, spanish, bahasa, dutch, icelandic, polish, swedish,
basque, english, portuges, turkish, brazil, esperanto, irish, romanian,
usorbian, breton, estonian, italian, samin, welsh, catalan, finnish,
latin, scottish, croatian, lsorbian, serbian, czech, french, magyar,
slovak, danish, galician, norsk, slovene,

The only thing that these files do is to translate various words usually
emitted by @latex{} during processing.  For example, this ensures that the
@ltor{} will provide the correct translation of the word ``Chapter'' in
the converted document.

You can select any of the above languages using the @option{-l} option.  This
is not needed if your @latex{} file contains @code{\usepackage[language]@{babel@}}.

Encountering the @option{german} package or documentstyle option (by H. Partl of the
Viena University) makes @ltor{} behave like that: German Quotes, German
Umlauts by @code{"a}, etc@enddots{}  This support is programmed directly into @ltor{}
and supporting similar features for other languages will require patching the
source code.

@xref{Language Configuration}, for details on how to write a @file{language.cfg} file
for your language by yourself.

@node Cross References, Equations, Language Support, Features
@section Cross References

Cross references are broken currently.
@ignore
If RTF version 1.1 is chosen  \label, \ref, and \pageref commands from @latex{} are translated to
hidden text in the RTF file.  (@xref{Missing and faulty command line options}.) This makes it possible to correctly edit the
resulting file in the target word processor. If RTF version 1.4 (or higher) is
chosen, crossreference updating is automated by the RTF reader.
@end ignore

@node Equations, Tables, Cross References, Features
@section Equations

Equations are now converted to RTF fields.  This is an interim solution.  
Ideally the equations would become OLE equation objects in the RTF file,
but this needs to be implemented.

It would be nice to have four separate levels of equation translation
@enumerate 
@item The first level would just do a simple text translation without
any special formatting
@item The second level (which is what is currently implemented) would be
to translate equations using fields.  These are not readily editable and
Word does not do a good job converting these to equation objects
@item  The third level would be to fully convert the @latex{} equations
to Word equation objects.  The API for this has been published, but 
is difficult because OLE encoding needs to be written.
@item Finally, the fourth translation would be to convert the equations
to images and embed these images in the RTF file.  This is what @code{ltx2rtf}
does and the results are not bad.
@end enumerate


@node Tables, Graphics, Equations, Features
@section Tables

The table code is currently barely working.  It needs to be rewritten.

@node Graphics, Pagestyles, Tables, Features
@section Graphics

One day I will get around to encorporating all graphics formats into the
RTF file.  This will probably be done using @code{imagemagick} to do
the actual translation to formats that are supported by Word and then
embedding the supported format in RTF.

@node Pagestyles, Hyperlatex, Graphics, Features
@section Pagestyles

If there is no @code{\pagestyle} command, the RTF output is generated as with plain
pagestyle, i.e. each page get's its page number centered at the bottom.

You must turn this off with the \pagestyle@{empty@} command in the @latex{} file if
you don't want pagenumbers.
The headings and myheadings styles are silently ignored by now.
The twosided option to the \documentstyle or \documentclass produces the
corresponding RTF tokens.
Note that these features require RTF Version 1.4.

@node Hyperlatex, , Pagestyles, Features
@section Hyperlatex

Hyperlatex support is largely broken at the moment.

Otfried Schwarzkopf has created the ``Hyperlatex Markup Language'' which is a
``little package that allows you to use @latex{} to prepare documents in HTML.''
It brings an Emacs lisp program with it to convert the Hyperlatex file to HTML.
Hyperlatex can be obtained from the CTAN-sites, see section Availability.
There are two handsome commands that avoid typing: \link and \xlink that
generate an ``internal'' label which then is used in the following \Ref and
\Pageref commands.

@latex{} makes it possible to write `\link@{anchor@}[ltx]@{label@}', which typesets:
`anchor ltx'. @ltor{} does NOT support this aproach since the optional
parameter is thrown away right now, @xref{LaTeX2RTF under Development}.

Note that you have to update your @file{.cfg} files if you are upgrading, since
there are a lot of HTML oriented commands in Hyperlatex that we simply can
`ignore'.

@node Configuring LaTeX2RTF, Error Messages and Logging of LaTeX2RTF Activity, Features, Top
@chapter Configuring LaTeX2RTF 

@menu
* Input processing ::           
* Output formatting ::          
* Direct Conversion Configuration ::               
* Ignore Command Configuration ::               
* Font Configuration ::                
* Language Configuration ::             
@end menu

@node Input processing, Output formatting, Configuring LaTeX2RTF, Configuring LaTeX2RTF
@section Input processing 

On processing input @ltor{} first converts the @latex{} special characters. If
it encounters one of the standard commands it is converted internally. If a
command is not known to @ltor{} it is first looked up in
@file{direct.cfg} and the RTF code specified there is output. If not found there it
is looked up in the section @file{ignore.cfg}.  This file includes a lot of @latex{}
commands that do not affect the output (cross reference information
and the like), or that we are not able or willing to convert to RTF.

You can use @file{ignore.cfg} if you get tired of seeing 
@example
WARNING: command: `foo' not found - ignored
@end example
@noindent and you don't need `foo' in your RTF document.  It would
be nice to send your additions to the @ltor{} mailing list for inclusion
in later distributions.

@ltor{} accepts Unix, MS-DOS, and Macintosh line ending codes (\n, \r\n
and \r).  The files it creates are the line ending for the platform on
which @ltor{} was compiled.

The @latex{} file may have been created with a wide variety of character
sets.  If the @latex{} lacks the @code{\package[codepage]@{inputenc@}}
definition, then you may need to use the command line switch to manually
select the proper code page. @xref{Input Encoding}.

@node Output formatting, Direct Conversion Configuration, Input processing, Configuring LaTeX2RTF
@section Output formatting 

On writing output, @ltor{} generates @code{\n} as line ending code.
Your RTF Reader should accept this on any platform. If you ftp your RTF file
from or to MS-DOS platforms the line ending code can be converted to @code{\r\n}. As
this should also be legal to any RTF Reader the resulting RTF rendering should
not be affected.

@ltor{} does not offer a whole lot of flexibility in how files are translated,
but it does offer some.  This flexibility resides in four files @file{direct.cfg},
@file{ignore.cfg}, @file{fonts.cfg}, and @file{language.cfg}.  These filese
are documented in the next four sections.

@node Direct Conversion Configuration, Ignore Command Configuration, Output formatting, Configuring LaTeX2RTF
@section Direct Conversion Configuration 

The file @file{direct.cfg} is used for converting @latex{} commands by simple text
replacement. The format consists of lines with a @latex{} command with backslash
followed by comma. The rest of the line until a @samp{.} character will be written
to the RTF file when the command is found in the @latex{} file. Lines
starting with a @samp{#} character are ignored. After the @samp{.} everything is ignored
to end of line. To select a specific font use @code{*fontname*}, where 
@code{fontname} be defined in @file{fonts.cfg}.
To write the @samp{*} character use @samp{**}. 
@example
\alpha,@{\f*Symbol* a@}. #alpha in the Symbol Font
\copyright,\'a9.
@end example

@node Ignore Command Configuration, Font Configuration, Direct Conversion Configuration, Configuring LaTeX2RTF
@section Ignore Command Configuration 

The file @file{ignore.cfg} is used for defining how to ignore specific commands. This
file is used for recognition of @latex{} variables, user defined variables, and
some simple commands. All variables are ignored but the converter must know the
names to correctly ignore assignments to variables. Lines in this file consist
of a variable name with backslash, followed by comma and the type of the
variable followed by @samp{.}. Possible types are

@table @samp
@item  NUMBER
simple numeric value
@item  MEASURE
numeric value with following unit of measure
@item OTHER
ignores anything to the first character after @samp{=} and from there to next
space. e.g., @code{\setbox\bak=\hbox}
@item COMMAND
ignores anything to next @samp{\} and from there to the occurence of anything
but a letter e.g., @code{\newbox\bak}
@item  SINGLE
ignore single command e.g., @code{\noindent}
@item  PARAMETER
ignores a command with one parameter e.g., @code{\foo@{bar@}}
@item PACKAGE
does not produce a Warning message if PACKAGE is encountered, e.g.,
`PACKAGE,kleenex.'
@item ENVCMD
proceses contents of unknown environment as if it were plain @latex{}
eg. `ENVCMD,environ.' Therefore @code{\begin@{environ@} text
\end@{environ@}}' as `text'.
@item ENVIRONMENT
ignores contents of that environment, e.g., with `ENVIRONMENT,ifhtml.'
@code{\begin@{ifhtml@} text \end@{ifhtml@}} ignores `text'.
@end table

The types are in upper case exactly as above. Do not use spaces. Lines starting
with a @samp{#} character are ignored. After the @samp{.} everything is ignored to end of
line. Example:
@example
\pagelength,MEASURE.
@end example

@node Font Configuration, Language Configuration, Ignore Command Configuration, Configuring LaTeX2RTF
@section Font Configuration 

The file @file{fonts.cfg} contains the font name mapping.  For example, this
file determine what font is used to represent @code{\rm} characters in the RTF file.  

A line consists of a font name in @latex{} followed by comma and a font
name in RTF. The end is marked by a @samp{.}. No spaces are allowed. The
@latex{} font will be converted to the RTF font when it is found
in the @latex{} file. If multiple translations for the same @latex{} font are
specified, only the first is used. All fonts in a @latex{} file that are
not in this file will be mapped to the default font. All RTF fonts
listed in this file will be in every RTF file header whether used or
not.  Lines starting with a @samp{#} character are ignored. After the
@samp{.} everything is ignored to end of line. 

To add a RTF font not
used as substitute for a @latex{} font --- for example a Symbol font used
in @file{direct.cfg} --- use a dummy @latex{} name like in the following
@example
Dummy3,MathematicalSymbols.
@end example

Make sure you use the correct font name. Take care of spaces in font names. The
default fonts are named Roman @code{\rm}, Slanted @code{\sl}, Sans Serif
@code{\sf}, Typewriter @code{\tt}, or Calligraphic @code{\cal}.

@node Language Configuration,, Font Configuration, Configuring LaTeX2RTF
@section Language Configuration 

The file(s) @file{language.cfg} control the translation of @latex{}'s ``hardcoded''
sectioning names.
The standard @latex{} styles have some fixed Title names like `Part', `Reference'
or `Bibliography' that appeared in English or German in the output with the
original versions of @ltor{}. 

It is unlikely that you will need to create a new @file{language.cfg} file.
However, just look at one of the existing files and follow the pattern.
The format is really simple.  

@node Error Messages and Logging of LaTeX2RTF Activity,, Configuring LaTeX2RTF, Top
@chapter Error Messages and Logging of LaTeX2RTF Activity 

As stated in the Debugging section, @ltor{} provides a means to control 
the amount of debugging information through the @option{-d#} switch.  
By using a debugging level of 4, you can get a pretty good idea of what
@latex{} command caused the problem and what line that command might be
found on.  

@table @samp

@item Fatal error messages
indicate a bug in the source code. PLEASE report them, if they do not
apear in the documentation @xref{Reporting Bugs}.

@item Error messages
always abort the program and are caused by conditions that prevent
further conversion of the input file.  Typically this is cause by
@ltor{} getting hopelessly confused by the number of braces in the
@latex{} file.

@item Warning messages
inform you, that there is some conversion loss from @latex{} to RTF, or that
the output file has some restrictions on some RTF Readers. Most of these 
warnings can be supressed by add the offending command to the @file{ignore.cfg}
file.
@end table

Error and Warning messages should follow the GNU Coding standards, i.e. they
have the format
@example
inputfile':line: Error|Warning: message
@end example

You can also control the level of debugging output by inserting @code{\verbositylevel@{#@}}
in the @latex{} file.  This is very handy if you have a large @latex{} file
that is failing in only a small section.  For example,
@example
problem free latex file ....
\verbositylevel@{5@}
problematic code
\verbositylevel@{0@}
@end example
@noindent will cause a huge amount of debugging information to be emitted
for the problematic code.

Error reporting and logging still has many inconsistencies, but it
gets better with each release.
Don't try to make any sense in debugging levels above 4, these are for my
own delight only and can change significantly between versions.

The @file{inputfile} may be incorrectly identified if it is incorporated
through @code{\input} or @code{\include}.  The line may be also be wrong
at times.  @xref{Known Bugs}.

@node LaTeX2RTF under Development,,, Top
@chapter LaTeX2RTF under Development 

@menu
* Unimplemented Features ::     
* Missing and faulty command line options ::  
* Known Bugs ::                 
* Reporting Bugs ::             
* Todo List ::                  
@end menu

@node Unimplemented Features, Missing and faulty command line options, LaTeX2RTF under Development, LaTeX2RTF under Development
@section Unimplemented Features 

@itemize @bullet
@item @ltor{} ignores some of the optional parameters of @code{\documentstyle} 
@item Need to finish code page support.  Typically characters that need to be
	  constructed using RTF @code{\field} commands are not implemented.
@item Add the code to produce the corresponding chapter, section informations
      and page numbering with headings and myheadings pagestyles. Implement
      @code{\markboth} and @code{\markright}.
@item To support @code{\tableofcontents} there would be two approaches: Transfer
      sectioning information, title text and let produce pagenumber by the rtf-
      reader. Scan and label all of the sectioning commands while reading and
      then construct the sectioning information using these labels. Needs two
      passes on @latex{} input.
@item Include the GNU gettext package to internationalize @ltor{}'s Messages.
@item Switch over to GNU getopt() and long options.
@end itemize

@node Missing and faulty command line options, Known Bugs, Unimplemented Features, LaTeX2RTF under Development
@section Missing and faulty command line options 

In this section you find comments about missing and buggy command line options.

@table @option
@item -V
The version information output is not compatible with the GNU Coding
Standards.

@item -d
Information logging and Error reporting is not implemented consistently.
Need to test and track problems with the linenumber and with the file name.

@item -?
There should be an option to intersperse RTF-Output with the @latex{} input
that produced it to aid debugging.

@item -o
Actually you must specify an output filename. Maybe further on the
meaning of this option changes, as writing @option{-o filename} takes more
typework then @option{> filename}. Either you may specify the name, or you must
not do it, depending on whether we choose to use GNU getopt or not.

@item -q
There should be a @option{-q} (quiet) option, to suppress Warning Messages. By
now this can be achieved by the @option{-d0} option.

@item -rmajor.minor
There should be an option that restrict the generation of RTF code with
version greater than major,minor. Actually this is done at compile time.
There are some Warning messages if ``newer'' RTF Code is generated, but it
is not consistent at all.

@option{-h}
The default values for search pathes and switches changeable by
command line options should be shown.
@end table

It would be useful to implement the GNU long option names, e.g.: `--debug',
`--output_file', `--quiet', etc.

@node Known Bugs, Reporting Bugs, Missing and faulty command line options, LaTeX2RTF under Development
@section Known Bugs 

@enumerate
@item The first parameter of a \link@{anchor@}[ltx]@{label@} is converted to the
      rtf-output. Label is stored to hyperref for later use, the optional
      parameter is ignored. [ltx] should be processed as Otfried recommends it,
      to use for exclusive @latex{} output.e.g: \link@{readhere@}[~\Ref]@{explaining:
      chapter@}. Since @{explaining:chapter@} is yet read by @latex{} and hyperlatex
      when [...] is evaluated it produces the correct reference. @ltor{} is
      only strolling from left to right through the text and can't remember
      what she will see in the future.
@item The optional argument of \item[...] in the description environment is
      converted to isolatin1 if applicable, but not @latex{} converted. Try `\item
      [Best~Friends]'.
@item The \section* command is accepted, but as I don't know how to produce a
      section without numbering it in rtf it does precisly this: print a
      section number.
@item CmdLabel can generate rtf1.4 Page references and Bookmarks, but Section
      References only with restrictions: The section reference copies the
      information of the `.aux' file to a locked rtf field. The better way
      would be, to include the section text in a bookmark if there is a label
      following, and write the bookmark with the label name, since then Word
      could update the section information.
@item The diagnostics routine does not output the correct (actual)
      inputfilename. (`.aux', `.bbl', @code{\input}).
@item The @@ltor@{@} macro of this document does NOT produce the correct @latex{}-
      Logo. Somebody can send me a correct version, and for @latexe{} also?!
@item To provide the end-of-line-code features a ``cleaned up'' temporary file is
      written and then read in as inputfile. This gets us into other troubles
      with input redirection and @code{\input} or @code{\include}ed @latex{}-files. This
      procedure is meant as a temporary means to provide this functionality and
      will be removed in the future.
@end enumerate

@node Reporting Bugs, Todo List, Known Bugs, LaTeX2RTF under Development
@section Reporting Bugs 

Report bugs to @email{Jorge.Lehner@@gmx.net,Georg Lehner)}. Ralf Schlatterbeck is no
longer the maintainer and will forward all mails refering @ltor{} to me.

Please give the following information and observe the following guidelines when
reporting a bug in the program:

Tell me the version of the program. For the executable you get the version by
specifying the @option{-V} option to @ltor{}. For the sources the version is the
version number of the file `version.h'.

The Operating System and version number where you are running or trying to
install @ltor{}. Be sure to check the file `Makefile' for settings that may
be specific to your machine, especially for some versions of SunOS there may be
settings which are needed to compile successfully. Do this before writing to
me.

If the program produces wrong output or does not work for you, include a short
@latex{} file along with a description of the problem. Do not send me large @latex{}
or rtf files, I simply do not have the time to wade through large files to
search for a bug! If necessary (i.e., the program produces wrong or invalid
rtf), send the rtf file that is produced along with the @latex{} input file.

Be patient with me. I am maintaining the program in my free time. I did not
write most of the code. Often I do not have the time to answer to your
question. I will, however, try to fix reported bugs in upcoming releases.

@node Todo List,, Reporting Bugs, LaTeX2RTF under Development
@section Todo List 

Georg's todo list
@itemize @bullet
@item  Make this Manual more consistent, the Todo and Known Bug List shorter and
      the Features List longer.
@item  Harmonize all of the error and warning messages.
@item  Put warnings everwhere aplicable about producing RTF 1.4 tokens.
@item  Provide a Testsuite.
@item  Be more specific about implementing on Unix Platforms.
@item  Provide an Error and Warning recovery guide to the user.
@item  Explain details of the MS-DOS executable in a separate chapter.
@item  Add a chapter with lists of all @latex{} commands that convert, and that do
      not convert to RTF, including their status (for future releases, never,
      partially functional, ...).
@end itemize

The following comes from Ralf: 
@itemize @bullet  
@item Redesign the input routines to not use lseek so that @ltor{} can read from pipes. 
@item Change the Makefile to use default rules for generating .o files. 
@item Also use generic rules in some other places (clean target) 
@item For ignored commands the number of arguments to ignore should also be given 
@item Environment definition produced with @code{\newtheorem} should be supported 
@item  Change how the current version is
computed (currently version.h defines the version of the whole package
this should change to a CVS (or RCS) version tag from which a version.h
file should automatically be generated).
@end itemize

@node Index of Commandline and Configuration file Options,,, Top
@chapter Index of Commandline and Configuration file Options 

@printindex cp

@contents
@bye


